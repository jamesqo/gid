#!/bin/bash

function help {
    echo 'gid adds, commits, and pushes your changes in a single command.'
    echo
    echo 'Usage: gid [directory]'
    echo 'cd to [directory] and git add/commit/pull/push everything all in one go.'
    echo
    echo 'Options:'
    echo '-b,--branch=BRANCH            Set branch to be checked out. By default this is master.'
    echo '-f,--force                    Force push/pull any conflicting changes.'
    echo '-l,--lazy                     If -m is not specified, set commit message to "$default_message." Username/password are entered for you during git push.'
    echo '-m,--message=MESSAGE          Set MESSAGE as the git commit message.'
    echo '-r,--remote=REMOTE            Push to REMOTE during git push. By default this is origin.'
}

branch='master'
default_message='Automatically committed by gid'
directory='.'
force=''
lazy='false'
message=''
remote='origin'

# Get options
while [ $# -gt 0 ]
do
    case "$1" in
        '-?'|-h|--help) # ? matches a single character by default, we don't want this behavior
        help
        exit 0
        ;;
        -b|--branch)
        branch="$2"
        shift
        ;;
        -f|--force)
        force='-f'
        ;;
        -l|--lazy)
        lazy='true'
        ;;
        -m|--message)
        message="$2"
        shift
        ;;
        -r|--remote)
        remote="$2"
        shift
        ;;
        *)
        directory="$1"
        ;;
    esac
    shift
done

cd "$directory"

# Where the real work starts
git add -A :/
if [ $lazy = 'false' -a "$message" = '' ]; then
    git commit
else
    if [ "$message" = '' ]; then
        message="$default_message"
    fi
    git commit -m "$message"
fi
git pull $force $remote $branch
git push $force $remote $branch
